{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyupHandler","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAaaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACGF,KAAKR,MAAMC,WACR,8DAA+BO,KAAKR,MAAMC,cAC1C,8DAtBZ,GAAyBU,IAAMC,W,MCR/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.2c351e60.chunk.js","sourcesContent":["import React from 'react';\n\n// export const App: React.FC = () => (\n//   <div className=\"App\">\n//     <p>Nothing was pressed yet</p>\n//     <p>The last pressed key is [Enter]</p>\n//   </div>\n// );\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyupHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyupHandler);\n  }\n\n  keyupHandler = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.pressedKey\n          ? <p>{`The last pressed key is ${this.state.pressedKey}`}</p>\n          : <p>Nothing was pressed yet</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}